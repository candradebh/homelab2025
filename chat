Iniciando meu projeto de homelab

Fiz um fork nesse projeto https://github.com/k3s-io/k3s-ansible

E agora vou adicionar como submodulo do meu projeto homelab2025 :

git submodule add https://github.com/candradebh/k3s-ansible.git infra/k3s

Criei um arquivo MakeFile:
.POSIX:
.PHONY: *
.EXPORT_ALL_VARIABLES:

KUBECONFIG = ~/.kube/config
KUBE_CONFIG_PATH = $(KUBECONFIG)

default: k3s


k3s:
	ansible-playbook ./infra/k3s/playbooks/site.yml -i inventory.yml

k3s-reset:
	ansible-playbook ./infra/k3s/playbooks/reset.yml -i inventory.yml

k3s-upgrade:
	ansible-playbook ./infra/k3s/playbooks/upgrade.yml -i inventory.yml

k3s-reboot:
	ansible-playbook ./infra/k3s/playbooks/reboot.yml -i inventory.yml

docs:
	mkdocs serve


Criei o arquivo mkdocs.yml
# yaml-language-server: $schema=https://squidfunk.github.io/mkdocs-material/schema.json

site_name: Homelab
copyright: Copyright &copy; 2025

repo_url: https://github.com/candradebh/homelab2025

theme:
  favicon: https://github.com/candradebh/homelab2025/favicon
  name: material
  palette:
    primary: black
  features:
    - navigation.expand
    - navigation.instant
    - navigation.sections
    - search.highlight
    - search.share

markdown_extensions:
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - attr_list
  - admonition
  - pymdownx.details
  - pymdownx.snippets:
      check_paths: true
  - def_list
  - pymdownx.tasklist:
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true

nav:
  - Home: index.md
  - Installation:
    - installation/architecture.md


Criei o arquivo inventory

---
k3s_cluster:
  children:
    server:
      hosts:
        192.168.1.50:
        192.168.1.51:
        192.168.1.52:
    agent:
      hosts:
        192.168.1.53:

  # Required Vars
  vars:
    ansible_port: 22
    ansible_user: root
    ansible_ssh_private_key_file: /root/.ssh/id_ed25519

    dns_server: "8.8.8.8"

    load_balancer_ip_pool: 192.168.1.192/27

    path_project_master_node: "/tmp/multiversonline/"

    ssh_public_key: "{{ lookup('file', '/root/.ssh/id_ed25519') }}"

    server_group: server

    system_timezone: "America/Sao_Paulo"

    k3s_version: v1.30.2+k3s1
    # The token should be a random string of reasonable length. You can generate
    # one with the following commands:
    # - openssl rand -base64 64
    # - pwgen -s 64 1
    # You can use ansible-vault to encrypt this value / keep it secret.
    # Or you can omit it if not using Vagrant and let the first server automatically generate one.
    token: "CRUZEIRAOCAMPEAOMAIORDEMINASNAOTEMDISCUSAO6A1EUVI"
    api_endpoint: "{{ hostvars[groups['server'][0]]['ansible_host'] | default(groups['server'][0]) }}"

    extra_server_args: " --flannel-backend=none --disable-network-policy --disable-kube-proxy --disable-helm-controller \
                        --disable=servicelb --disable=traefik --disable=local-storage "

    # Optional vars
    # extra_server_args: ""
    # extra_agent_args: ""
    # cluster_context: k3s-ansible
    # api_port: 6443
    # k3s_server_location: /var/lib/rancher/k3s
    # systemd_dir: /etc/systemd/system
    # extra_service_envs: [ 'ENV_VAR1=VALUE1', 'ENV_VAR2=VALUE2' ]
    # user_kubectl: true, by default kubectl is symlinked and configured for use by ansible_user. Set to false to only kubectl via root user.

    # Manifests or Airgap should be either full paths or relative to the playbook directory.
    # List of locally available manifests to apply to the cluster, useful for PVCs or Traefik modifications.
    # extra_manifests: [ '/path/to/manifest1.yaml', '/path/to/manifest2.yaml' ]
    # airgap_dir: /tmp/k3s-airgap-images

    # server_config_yaml:  |
    #   This is now an inner yaml file. Maintain the indentation.
    #   YAML here will be placed as the content of /etc/rancher/k3s/config.yaml
    #   See https://docs.k3s.io/installation/configuration#configuration-file
    # agent_config_yaml:  |
    #   Same as server_config_yaml, but for the agent nodes.
    #   YAML here will be placed as the content of /etc/rancher/k3s/config.yaml
    #   See https://docs.k3s.io/installation/configuration#configuration-file
    # registries_config_yaml:  |
    #   Containerd can be configured to connect to private registries and use them to pull images as needed by the kubelet.
    #   YAML here will be placed as the content of /etc/rancher/k3s/registries.yaml
    #   See https://docs.k3s.io/installation/private-registry


Preciso habilitar o root no ubuntu



